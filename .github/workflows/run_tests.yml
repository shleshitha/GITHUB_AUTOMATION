name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc g++ openjdk-17-jdk python3 python3-pip
          pip install pytest

      - name: Detect Changed Files
        id: detect-changes
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)
          fi

          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD)
          echo "Changed files: $CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No file changes detected. Exiting..."
            exit 1
          fi

          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Determine File Type
        id: determine-language
        run: |
          echo "Checking for language based on changes:"
          echo "$CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -qE "solutions/.*\\.c$"; then
            echo "language=C" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE "solutions/.*\\.cpp$"; then
            echo "language=C++" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE "solutions/.*\\.py$"; then
            echo "language=Python" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE "solutions/.*\\.java$"; then
            echo "language=Java" >> $GITHUB_ENV
          else
            echo "No recognized source file changes. Exiting..."
            exit 1
          fi
        env:
          CHANGED_FILES: ${{ env.CHANGED_FILES }}

      - name: Run C Tests
        if: ${{ env.language == 'C' }}
        run: |
          if ls tests/test_c.c 1> /dev/null 2>&1; then
            gcc -o c_test tests/test_c.c solutions/*.c && ./c_test
          else
            echo "C test file not found."
          fi

      - name: Run C++ Tests
        if: ${{ env.language == 'C++' }}
        run: |
          if ls tests/test_cpp.cpp 1> /dev/null 2>&1; then
            g++ -o cpp_test tests/test_cpp.cpp solutions/*.cpp && ./cpp_test
          else
            echo "C++ test file not found."
          fi

      - name: Run Python Tests
        if: ${{ env.language == 'Python' }}
        run: |
          if ls tests/test_python.py 1> /dev/null 2>&1; then
            pytest tests/test_python.py
          else
            echo "Python test file not found."
          fi

      - name: Run Java Tests
        if: ${{ env.language == 'Java' }}
        run: |
          if ls tests/Test.java 1> /dev/null 2>&1; then
            javac -d . solutions/*.java tests/*.java && java tests.Test
          else
            echo "Java test file not found."
          fi
